plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
	id 'java-library'
	id 'java'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = System.getenv("COMMIT") ? "${project.sandbox_version}-${System.getenv("COMMIT")}" : "${project.sandbox_version}"
group = project.maven_group

minecraft {
}

repositories {
	maven { url 'https://cdn.hrzn.studio/maven' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
	compile 'io.sentry:sentry:1.7.27'
	compile('org.apache.logging.log4j:og4j-slf4j-impl:2.8.1') {
		transitive = false
	}

	implementation project(':discord-rpc')
	include(project(':discord-rpc')) {
        transitive = false
    }

    implementation project(':SandboxAPI')
    include(project(':SandboxAPI')) {
        transitive = false
    }

	if(!System.getenv("COMMIT")) {
		runtime project(':TestMod')
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar)
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
			pom.withXml {
				asNode().dependencies.'*'.findAll() {
					it.artifactId.text() == 'fabric-loader'
				}.each() {
					it.parent().remove(it)
				}
			}
		}
	}
	repositories {
		if (System.getenv("BRANCH") == "master") {
			maven {
				url "s3://cdn.hrzn.studio/maven"
				authentication {
					awsIm(AwsImAuthentication)
				}
			}
		} else {
			mavenLocal()
		}
	}
}
