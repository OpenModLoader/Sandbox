plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'java-library'
	id 'maven-publish'
	id "com.jfrog.bintray" version "1.8.4"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()
archivesBaseName = project.archives_base_name
def buildNumber = ENV.BUILD_NUMBER ?: '0'
version = "${project.sandbox_version}.${buildNumber}"
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/sandbox-fabric.accesswidener")
}

allprojects {
	apply plugin: 'java'
}

repositories {
	mavenCentral()
	maven { url 'https://dl.bintray.com/sandboxpowered/API' }
	maven { url 'https://dl.bintray.com/sandboxpowered/Library' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
	runtimeOnly('org.apache.logging.log4j:log4j-slf4j-impl:2.8.1') {
		transitive = false
	}
	runtimeOnly project(':TestAddon')

	implementation platform('org.sandboxpowered.api:api:0.4.+')

	include implementation('org.sandboxpowered.api:base')
	include implementation('org.sandboxpowered.api:rendering')
	include implementation('org.sandboxpowered.api:resources')

	compileOnly 'org.jetbrains:annotations:19.0.0'
	include implementation( 'com.electronwill.night-config:core:3.6.0')
	include implementation('com.electronwill.night-config:toml:3.6.0')
	include implementation('com.github.zafarkhaja:java-semver:0.9.0')
	include implementation('org.sandboxpowered:SimpleEventHandler:2.0.3')
	implementation 'com.google.guava:guava:21.0'
	implementation 'org.apache.commons:commons-lang3:3.9'
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}

	rename '(.+\\.accesswidener)', 'META-INF/$1'
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

bintray {
	user = System.getenv("BINTRAY_USER")
	key = System.getenv("BINTRAY_KEY")
	publications = ['maven']
	publish = true

	pkg {
		repo = 'Loader'
		name = 'fabric'
		userOrg = 'sandboxpowered'
		licenses = ['LGPL-3.0']
		vcsUrl = 'https://github.com/sandboxpowered/sandbox.git'
		publicDownloadNumbers = true
		githubRepo = 'sandboxpowered/sandbox'
		githubReleaseNotesFile = 'README.md'
		version {
			name = project.version
			desc = ''
			vcsTag = project.version
			released  = new Date()
		}
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact remapJar
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
}
